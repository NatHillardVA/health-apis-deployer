encrypt-all() {
for file in $(find $DIRECTORY -maxdepth 1 -name "*.testvars" -o -name "*.conf" -a -not -name "deployment.conf"); do
encrypt $file
done
}
encrypt() {
  awk -v passphrase="$ENCRYPTION_PASSPHRASE" -v FS="\n" '
  REGEX=/^(export )?([-A-Za-z0-9_]+=)(.*)/{

                     #Get the variable
                     variable=gensub(/^(export )?([-A-Za-z0-9_]+=)(.*)/,"\\1\\2","g",$1)

                     #Get the value of the variable
                     value=gensub(/^(export )?([-A-Za-z0-9_]+=)(.*)/,"\\3","g",$1)

                     # Encrypt the value
                     "echo "value"| openssl enc -aes-256-cbc -a -A -nosalt -k "passphrase | getline secret

                     #Write the variable with the new encrypted value
                     print variable secret
          }
        !REGEX{print}' $1 > $1.tmp && mv $1.tmp $1
}

decrypt-all() {
for file in $(find $DIRECTORY -maxdepth 1 -name "*.testvars" -o -name "*.conf" -a -not -name "deployment.conf"); do
decrypt $file
done
}
decrypt(){
  awk -v passphrase="$ENCRYPTION_PASSPHRASE" -v FS="\n" '
  REGEX=/^(export )?([-A-Za-z0-9_]+=)(.*)/{

                     #Get the variable
                     variable=gensub(/^(export )?([-A-Za-z0-9_]+=)(.*)/,"\\1\\2","g",$1)

                     #Get the secret
                     secret=gensub(/^(export )?([-A-Za-z0-9_]+=)(.*)/,"\\3","g",$1)

                     #Decrypt the secret
                     "echo "secret"| openssl enc -aes-256-cbc -d -a -A -nosalt -k "passphrase | getline value

                     #Write the variable with the decrypted value
                     print variable value
          }
        !REGEX{print}' "$1" > "$1".tmp && mv "$1".tmp "$1"
}

usage() {
  cat <<EOF
  __________________
  |< Hey! Listen! >|
  ------------------
  .\`.         .\`.
  |  \       /  |
  \`.  \     /  .\`
    \`. \___/ .\`
      /     \\

      .\_ _/.
     \`..\` \`..\`
  Commands
    encrypt [--directory|-d <directory>] [--encryption-passphrase|-e <passphrase>]
    decrypt [--directory|-d <directory>] [--encryption-passphrase|-e <passphrase>]

  Example
    encrypt
      --directory=these/are/my/confs
      --encryption-passphrase=shhthesearesecrets
$1
EOF
exit 1
}

  ARGS=$(getopt -n $(basename ${0}) \
      -l "directory:,encryption-passphrase:,file:,help" \
      -o "d:e:f:h" -- "$@")
  [ $? != 0 ] && usage
  eval set -- "$ARGS"
  while true
  do
    case "$1" in
      -d|--directory) DIRECTORY=${2%/};;
      -e|--encryption-passphrase) ENCRYPTION_PASSPHRASE=$2;;
      -f|--file) FILE=$2;;
      -h|--help) usage;;
      --) shift;break;;
    esac
    shift;
  done

  if [[ -z "$ENCRYPTION_PASSPHRASE" ]]; then
    usage "Missing variable ENCRYPTION_PASSPHRASE or option --encryption-passphrase|-e."
  fi

[ $# == 0 ] && usage "No command specified"
COMMAND=$1
shift
case "$COMMAND" in
  e|encrypt) if [[ -z "$FILE" ]] ; then
      usage "Missing variable FILE or option --file|-f." ;
    else
      encrypt $FILE;
    fi;;
  d|decrypt)if [[ -z "$FILE" ]]; then
      usage "Missing variable FILE or option --file|-f."
    else
      decrypt $FILE
    fi;;
  ea|encrypt-all) if [[ -z "$DIRECTORY" ]]; then
      usage "Missing variable DIRECTORY or option --directory|-d."
    else encrypt-all
    fi;;
  da|decrypt-all) if [[ -z "$DIRECTORY" ]]; then
      usage "Missing variable DIRECTORY or option --directory|-d."
    else decrypt-all
    fi;;
  *) usage "Unknown command: $COMMAND";;
esac
