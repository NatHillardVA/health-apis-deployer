#!/usr/bin/env bash
set -euo pipefail

export PATH=$(dirname $(readlink -f $0)):$PATH

usage() {
cat >&2 <<EOF
$0 [options] <command>

Manage deployment units.

Options
-c, --coordinates <maven-coordinates>
  The Maven coordinates of the deployment unit artifact.
-d, --directory <path>
  The location to place the contents of the deployment unit.

Commands
fetch -c <coords> -d <path>
  Fetch and unpack the deployment unit

${1:-}
EOF
exit 1
}

main() {
  local group= artifact= version= directory=
  local args
  if ! args=$(getopt \
    -l "debug,coordinates:,directory:" \
    -o "c:d:" -- "$@")
  then usage; fi
  eval set -- "$args"
  while true
  do
    case "$1" in
      --debug) DEBUG=true;;
      -c|--coordinates) coordinates="$2";;
      -d|--directory) directory="$2";;
      --) shift; break;;
    esac
    shift
  done

  if [ -z "${DEBUG:-}" ]; then DEBUG=false; fi
  if [ "$DEBUG" == "true" ]; then set -x; fi

  if [ $# != 1 ]; then usage "Command not specified"; fi
  local command=$1
  case $command in
    fetch) fetch "${coordinates}" "${directory}";;
    *) usage "Unknown command: $command";;
  esac
}

RM_ON_EXIT=()
onExit() {
  status=$?
  if [ ${#RM_ON_EXIT[@]} -gt 0 ]; then rm -rf ${RM_ON_EXIT[@]}; fi
  exit $status
}
trap onExit EXIT


requireParam() {
  local param="${1}"
  local value="${2:-}"
  if [ -z "$value" ]; then usage "Parameter not specified: $param"; fi
}


fetch() {
  local coordinates="${1:-}" directory="${2:-}"
  requireParam "coordinates" "$coordinates"
  requireParam "directory" "$directory"
  directory=$(readlink -fm $directory)
  local parent=$(dirname $directory)
  if [ -d "$parent" ]; then mkdir -p $parent; fi
  echo "Fetching deployment unit"
  local tmpDir=$(mktemp -d -p .)
  RM_ON_EXIT+=($tmpDir)
  cd $tmpDir
  nexus fetch -a "$coordinates" -d du.tar.gz
  tar xf du.tar.gz
  local content=$(find -mindepth 1 -maxdepth 1 -type d | head -1)
  local basename=$(basename $directory)
  mv $content $basename
  mv $basename $parent
  ryan-secrets decrypt-all --directory $DU_DIR --encryption-passphrase $DU_DECRYPTION_KEY
}

main "$@"
exit 0
