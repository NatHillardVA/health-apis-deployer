#!/usr/bin/env bash
set -euo pipefail

export PATH=$(dirname $(readlink -f $0)):$PATH

usage() {
cat >&2 <<EOF
$0 [options] <command>

Track deployment stage

Options
-c, --char <character>
  The banner character
-m, --message <text>
  The banner message
-s, --size <number>
  The number of characters or width of the banner

Commands
print [-c <char>] [-m <text>] [-s <size>]
  Print a banner specifying all aspects
h1 -m <text>
  Print a banner with a Heading 1 style
h2 -m <text>
  Print a banner with a Heading 2 style
file -m <filename>
  Print a banner with a file content style

${1:-}
EOF
exit 1
}

main() {
  local group= artifact= version= directory=
  local args
  if ! args=$(getopt \
    -l "debug,coordinates:,directory:" \
    -o "c:d:" -- "$@")
  then usage; fi
  eval set -- "$args"
  while true
  do
    case "$1" in
      --debug) DEBUG=true;;
      -c|--coordinates) coordinates="$2";;
      -d|--directory) directory="$2";;
      --) shift; break;;
    esac
    shift
  done

  if [ -z "${DEBUG:-}" ]; then DEBUG=false; fi
  if [ "$DEBUG" == "true" ]; then set -x; fi

  if [ $# != 1 ]; then usage "Command not specified"; fi
  local command=$1
  case $command in
    fetch) fetch "${coordinates}" "${directory}";;
    *) usage "Unknown command: $command";;
  esac
}

requireParam() {
  local param="${1}"
  local value="${2:-}"
  if [ -z "$value" ]; then usage "Parameter not specified: $param"; fi
}


fetch() {
  local coordinates="${1:-}" directory="${2:-}"
  requireParam "coordinates" "$coordinates"
  requireParam "directory" "$directory"
  echo "Fetching deployment unit"
  if [ ! -d "$directory" ]; then mkdir -p $directory; fi
  cd $directory
  nexus fetch -a "$coordinates" -d du.tar.gz
  tar vxf du.tar.gz
}

main "$@"
exit 0
