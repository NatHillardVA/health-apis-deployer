#!/usr/bin/env bash

set -euo pipefail

#
# Helper script for blue-green deployment strategy
# This script will attach a product to a loadbalancer by...
# 1. Creating a target group, for the product, if one doesn't exist
# 2. Attaching the new/existing product target group to a singular
#    AZ's auto-scaling group
# 3. Creating a Load Balancer rule that routes traffic along a
#    given product's path, respecting priority
#

#
# Color of the load-balancer
# Blue - production/public traffic
# Green -testing/internal use
#
COLOR=$1

#
# The prefix we use for AZ's is the last character of the string...
# Example: us-gov-west-1a
#                       ^
#
AZ_ABREVIATION=${AVAILABILITY_ZONE: -1}

#
# Weak Input Validation
#
test -n "$CLUSTER_ID"
test -n "$COLOR"
test -n "$DU_HEALTH_CHECK_PATH"
test -n "${#DU_LOAD_BALANCER_RULES[@]}"
test -n "$AZ_ABREVIATION"
test -n "$VPC_NAME"

echo "============================================================"
echo "Attaching $PRODUCT to $CLUSTER_ID $COLOR load balancer"

load-balancer create-target-group \
    --env "$VPC_NAME" \
    --cluster-id "$CLUSTER_ID" \
    --color "$COLOR" \
    --product "$PRODUCT" \
    --health-check-path="$DU_HEALTH_CHECK_PATH" \

load-balancer enable-target-group \
    --env "$VPC_NAME" \
    --cluster-id "$CLUSTER_ID" \
    --color "$COLOR" \
    --product "$PRODUCT" \
    --az-abreviation="$AZ_ABREVIATION"


for priority in ${!DU_LOAD_BALANCER_RULES[@]}
do
  rule="${DU_LOAD_BALANCER_RULES[$priority]}"
  echo "Creating rule $rule with minimum priority $priority"
  load-balancer create-rule \
    --env "$VPC_NAME" \
    --cluster-id "$CLUSTER_ID" \
    --color "$COLOR" \
    --product "$PRODUCT" \
    --rule-path "$rule" \
    --min-priority "$priority" \
    --az-abreviation "$AZ_ABREVIATION"
done
