#!/usr/bin/env bash
set -euo pipefail

export PATH=$(dirname $(readlink -f $0))/bin:$PATH

usage() {
cat >&2 <<EOF
$0 [options] <command>

Print a banner

Options
-c, --char <character>
  The banner character
-m, --message <text>
  The banner message
-s, --size <number>
  The number of characters or width of the banner

Commands
print [-c <char>] [-m <text>] [-s <size>]
  Print a banner specifying all aspects
h1 -m <text>
  Print a banner with a Heading 1 style
h2 -m <text>
  Print a banner with a Heading 2 style
file -m <filename>
  Print a banner with a file content style

${1:-}
EOF
exit 1
}

main() {
  local size=${BANNER_DEFAULT_SIZE:-78} char= message=
  local args
  if ! args=$(getopt \
    -l "debug,size:,char:,message:" \
    -o "s:c:m:" -- "$@")
  then usage; fi
  eval set -- "$args"
  while true
  do
    case "$1" in
      --debug) DEBUG=true;;
      -c|--char) char="$2";;
      -s|--size) size="$2";;
      -m|--message) message="$2";;
      --) shift; break;;
    esac
    shift
  done

  if [ -z "${DEBUG:-}" ]; then DEBUG=false; fi
  if [ "$DEBUG" == "true" ]; then set -x; fi

  if [ $# != 1 ]; then usage "Command not specified"; fi
  local command=$1
  case $command in
    print) print "${size}" "${char:--}" "${message:--}";;
    h1) print "${size}" "${char:-=}" "[  ${message:-}  ]";;
    h2) print "${size}" "${char:--}" "[  ${message:-}  ]";;
    file) print "${size}" "${char:--}" "( ${message:-} )";;
    *) usage "Unknown command: $command";;
  esac
}


print() {
  local size="$1" char="$2" message="$3"
  local line=$(eval printf -- \"${char}%.0s\" {1..${size}})
  printf -- "${char}${char}%s%s\n" "$message" "${line:${#message}}"
}

main "$@"
exit 0
