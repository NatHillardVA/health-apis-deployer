#!/usr/bin/env bash
set -euo pipefail

export PATH=$(dirname $(readlink -f $0)):$PATH

usage() {
cat >&2 <<EOF
$0 [options] <command>

Get information about deployment environments

Options
-e, --environment <env>
  The environment name, e.g. qa or staging-lab

Commands
promoted-from -e <env>
  Print the environment this environment is promoted from.
  For example, production is promoted from staging.
  Root envionrments like "qa" print themselves.
promotes-to -e <env>

${1:-}
EOF
exit 1
}

main() {
  local environment=
  local args
  if ! args=$(getopt \
    -l "debug,environment:" \
    -o "e:" -- "$@")
  then usage; fi
  eval set -- "$args"
  while true
  do
    case "$1" in
      --debug) DEBUG=true;;
      -e|--environment) environment="$2";;
      --) shift; break;;
    esac
    shift
  done

  if [ -z "${DEBUG:-}" ]; then DEBUG=false; fi
  if [ "$DEBUG" == "true" ]; then set -x; fi

  if [ $# != 1 ]; then usage "Command not specified"; fi
  local command=$1
  case $command in
    promoted-from) promotedFrom "${environment}";;
    promotes-to-vpc) promotesToVpc "${environment}";;
    *) usage "Unknown command: $command";;
  esac
}

requireParam() {
  local param="${1}"
  local value="${2:-}"
  if [ -z "$value" ]; then usage "Parameter not specified: $param"; fi
}

promotedFrom() {
  local environment="${1:-}"
  requireParam "environment" "$environment"
  case $environment in
    qa) echo qa;;
    staging) echo qa;;
    production) echo staging;;
    staging-lab) echo qa;;
    lab) echo staging-lab;;
    uat) echo qa;;
    *) usage "Unknown environment: $environment";;
  esac
}


isKnown() {
  local environment="${1}"
  case $environment in
    qa) return;;
    staging) return;;
    production) return;;
    staging-lab) return;;
    lab) return;;
    uat) return;;
    *) echo "Unknown environment: $environment" > /dev/stderr; return 1;;
  esac
}

promotesToVpc() {
  local environment="${1:-}"
  requireParam "environment" "$environment"
  isKnown "$environment"
  if [ $environment == "qa" ]
  then
    echo "Staging Staging-Lab"
  fi
}


main "$@"
exit 0
