#!/usr/bin/env bash
set -euo pipefail

echo "============================================================"

onExit() {
  if [ -f "$NAMESPACE_YAML" ]; then rm $NAMESPACE_YAML; fi
}
trap onExit EXIT

AVAILABILITY_ZONE=$1
DU_DIR=$2
test -n "$DU_DIR"

DEFAULT_CONF=$DU_DIR/deployment.conf
ENV_CONF=$DU_DIR/$ENVIRONMENT.conf

test -f "$DEFAULT_CONF"
test -f "$ENV_CONF"

NAMESPACE_YAML=$(mktemp ns-XXXX.yaml)
(
  # Make sure the sourced scripts cannot modify any of our sensitive variables
  declare -r BUILD_DATE
  declare -r DU_ARTIFACT
  declare -r DU_AWS_BUCKET_NAME
  declare -r DU_NAMESPACE
  declare -r DU_S3_FOLDER
  declare -r DU_VERSION
  declare -r K8S_DEPLOYMENT_ID
  declare -r PRODUCT
  . $DEFAULT_CONF
  . $ENV_CONF
  cat $WORKSPACE/products/$PRODUCT.yaml | envsubst > $NAMESPACE_YAML
)

#
# Check to see if the namespace exists and delete it if it does
#
EXISTING_NAMESPACE=$(cluster-fox kubectl $AVAILABILITY_ZONE -- get namespace --no-headers \
  | awk "/^$DU_NAMESPACE / {print \$1}")
if [ -n "$EXISTING_NAMESPACE" ]
then
  echo "Deleting namespace $DU_NAMESPACE from $AVAILABILITY_ZONE"
  cluster-fox kubectl $AVAILABILITY_ZONE -- delete namespace $DU_NAMESPACE
fi

echo "Creating namespace $DU_NAMESPACE in $AVAILABILITY_ZONE"
cluster-fox kubectl $AVAILABILITY_ZONE -- apply -f $NAMESPACE_YAML
